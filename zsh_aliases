#unalias -m '*' # clear all aliases, redefine my own ones

# OSX specific aliases
if [[ "$(uname -s)" == "Darwin" ]]; then
  alias eject="diskutil eject"
  alias flushdns="dscacheutil -flushcache"

  # `wifi on` to turn wifi on, and `wifi off` to turn it off
  alias wifi="networksetup -setairportpower $(networksetup -listallhardwareports | grep -A 2 'Hardware Port: Wi-Fi' | grep 'Device:' | awk '{print $2}')"

  # These assume you've installed memcached, mysql & postgresql with brew
  #alias memcached_load="launchctl load -w /usr/local/Cellar/memcached/1.4.13/homebrew.mxcl.memcached.plist"
  #alias memcached_unload="launchctl unload -w /usr/local/Cellar/memcached/1.4.13/homebrew.mxcl.memcached.plist"
  #alias mysql_load="launchctl load -w /usr/local/Cellar/mysql/5.5.20/homebrew.mxcl.mysql.plist"
  #alias mysql_unload="launchctl unload -w /usr/local/Cellar/mysql/5.5.20/homebrew.mxcl.mysql.plist"
  #alias postgres_load="launchctl load -w /usr/local/Cellar/postgresql/9.1.3/homebrew.mxcl.postgresql.plist"
  #alias postgres_unload="launchctl unload -w /usr/local/Cellar/postgresql/9.1.3/homebrew.mxcl.postgresql.plist"

  # QuickLook stuff
  alias ql="qlmanage -p"
  alias quicklook="qlmanage -p"

  # Manually remove a downloaded app or file from the quarantine
  function unquarantine() {
    for attribute in com.apple.metadata:kMDItemDownloadedDate \
      com.apple.metadata:kMDItemWhereFroms \
      com.apple.quarantine; do
      xattr -r -d "$attribute" "$@"
    done
  }

  function pledit() { # plist editor.
    if [ $# -ne 1 ]; then
      echo -e "pledit: Edit Apple plist file\nusage: pledit plist_filename"
    else
      sudo plutil -convert xml1 "${1}"; # convert the binary file to xml
      sudo ${EDITOR} "${1}"; # use the default editor
      sudo plutil -convert binary1 "${1}" # convert it back to binary
    fi
  }

  # Sound.
  alias stfu="osascript -e 'set volume output muted true'"
  alias mute="osascript -e 'set volume output muted true'"
  alias unmute="osascript -e 'set volume output muted false'"

  # Airplay sometimes craps out, add helper to kick it
  function fix_airplay {
    sudo kill $(ps -ax | grep '/usr/sbin/coreaudiod' | awk '{print $1}')
  }
fi 

# Linux specific aliases
if [[ "$(uname -s)" == "Linux" ]]; then
  alias l-d="ls -lFad"
  alias l="ls -laF"
  alias ll="ls -lFa | TERM=vt100 less"
fi

# vim config
if [[ -x /usr/local/bin/vim ]]; then
    # brew-installed vim
    alias vim="/usr/local/bin/vim"
    alias vi="/usr/local/bin/vim"
    export EDITOR="/usr/local/bin/vim"
elif [[ -x /usr/bin/vim ]]; then
    alias vi="/usr/bin/vim"
    alias vim="/usr/bin/vim"
    export EDITOR="/usr/bin/vim"
else
    alias vi="/bin/vim"
    alias vim="/bin/vim"
    export EDITOR="/bin/vim"
fi
export VISUAL=${EDITOR}

# Clean up files that have the wrong line endings
alias mac2unix="tr '\015' '\012'"
alias unix2mac="tr '\012' '\015'"

# A couple of different external IP lookups depending on which is down.
alias external_ip="curl -s icanhazip.com"
alias myip="dig +short myip.opendns.com @resolver1.opendns.com"

# SSH stuff
# Pass our credentials by default
alias ssh_unkeyed="/usr/bin/ssh"
alias scp_no_hostchecks="scp -o UserKnownHostsFile=/dev/null -o GlobalKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
alias ssh_no_hostchecks="ssh -A -o UserKnownHostsFile=/dev/null -o GlobalKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

# Strip color codes from commands that insist on spewing them so we can
# pipe them into files cleanly
alias stripcolors='sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"'

# Dump the last 20 history entries
alias zh="fc -l -d -D"

alias ..="cd .."
alias ...="cd ../.."
