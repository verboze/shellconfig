#!/bin/bash
#
# Only including a shebang to trigger Sublime Text to use shell syntax highlighting
#
# Copyright 2006-2015 Joseph Block <jpb@unixorn.net>
#
# BSD licensed, see LICENSE.txt

export GOPATH=~/gocode

# yes, these tests are ugly. They do however, work.
if [[ "$(uname -s)" == "Darwin" ]]; then
  # do OS X specific things
  alias eject="diskutil eject"
  alias flushdns="dscacheutil -flushcache"
  alias killSS='kill -9 $(ps ww |grep ScreenSaverEngine |grep -v grep |awk "{print $1}")'
  alias l-d="ls -lFaGd"
  alias l-h="ls -laFGh"
  alias l-l="ls -laFG"
  alias l="ls -laFG"
  alias ll="ls -lFa | TERM=vt100 less"

  # `wifi on` to turn wifi on, and `wifi off` to turn it off
  alias wifi="networksetup -setairportpower $(networksetup -listallhardwareports | grep -A 2 'Hardware Port: Wi-Fi' | grep 'Device:' | awk '{print $2}')"

  # These assume you've installed memcached, mysql & postgresql with brew
  alias memcached_load="launchctl load -w /usr/local/Cellar/memcached/1.4.13/homebrew.mxcl.memcached.plist"
  alias memcached_unload="launchctl unload -w /usr/local/Cellar/memcached/1.4.13/homebrew.mxcl.memcached.plist"
  alias mysql_load="launchctl load -w /usr/local/Cellar/mysql/5.5.20/homebrew.mxcl.mysql.plist"
  alias mysql_unload="launchctl unload -w /usr/local/Cellar/mysql/5.5.20/homebrew.mxcl.mysql.plist"
  alias postgres_load="launchctl load -w /usr/local/Cellar/postgresql/9.1.3/homebrew.mxcl.postgresql.plist"
  alias postgres_unload="launchctl unload -w /usr/local/Cellar/postgresql/9.1.3/homebrew.mxcl.postgresql.plist"

  # Helpers for manipulating the OSX clipboard
  alias gpaste="pbpaste | perl -pe 's/\r\n|\r/\n/g'"
  alias pbconvert="pbpaste | perl -pe 's/\r\n|\r/\n/g' | pbcopy"
  alias pbsort="pbpaste | sort | pbcopy"

  # QuickLook stuff
  alias ql="qlmanage -p"
  alias quicklook="qlmanage -p"
  alias spotlighter="mdfind -onlyin `pwd`"
  alias top="TERM=vt100 top"

  # Manually remove a downloaded app or file from the quarantine
  function unquarantine() {
    for attribute in com.apple.metadata:kMDItemDownloadedDate \
      com.apple.metadata:kMDItemWhereFroms \
      com.apple.quarantine; do
      xattr -r -d "$attribute" "$@"
    done
  }

  function cleanxmlclip {
    pbpaste | tidy -xml -wrap 0 | pbcopy
  }

  function pledit() { # plist editor.
    if [ $# -ne 1 ]; then
      echo -e "pledit: Edit Apple plist file\nusage: pledit plist_filename"
    else
      sudo plutil -convert xml1 "${1}"; # convert the binary file to xml
      sudo ${EDITOR} "${1}"; # use the default editor
      sudo plutil -convert binary1 "${1}" # convert it back to binary
    fi
  }

  # Sound.
  alias stfu="osascript -e 'set volume output muted true'"
  alias mute="osascript -e 'set volume output muted true'"
  alias unmute="osascript -e 'set volume output muted false'"

  # Airplay sometimes craps out, add helper to kick it
  function fix_airplay {
    sudo kill $(ps -ax | grep '/usr/sbin/coreaudiod' | awk '{print $1}')
  }

else
  alias cputop="top -o cpu"
  alias l-d="ls -lad"
  alias l="ls -la"
  alias ll="ls -la | less"
fi

if [[ "$(uname -s)" == "Linux" ]]; then
  # we're on linux
  alias l-d="ls -lFad"
  alias l="ls -laF"
  alias ll="ls -lFa | TERM=vt100 less"
fi

export CVS_RSH=ssh

alias historysummary="history | awk '{a[\$2]++} END{for(i in a){printf \"%5d\t%s\n\",a[i],i}}' | sort -rn | head"

if [ -x /bin/vim ]; then
    alias vi="/bin/vim"
    alias vim="/bin/vim"
    export EDITOR="/bin/vim"
fi

if [ -x /usr/bin/vim ]; then
    alias vi="/usr/bin/vim"
    alias vim="/usr/bin/vim"
    export EDITOR="/usr/bin/vim"
fi

# MacPorts has a newer vim than Apple ships
if [ -x /opt/local/bin/vim ]; then
    alias vim="/opt/local/bin/vim"
    alias vi="/opt/local/bin/vim"
    export EDITOR="/opt/local/bin/vim"
fi

# So does brew
if [ -x /usr/local/bin/vim ]; then
    alias vim="/usr/local/bin/vim"
    alias vi="/usr/local/bin/vim"
    export EDITOR="/usr/local/bin/vim"
fi
# Clearly, I really like vim.

export VISUAL=${EDITOR}

# Clean up files that have the wrong line endings
alias mac2unix="tr '\015' '\012'"
alias unix2mac="tr '\012' '\015'"

# A couple of different external IP lookups depending on which is down.
alias external_ip="curl -s icanhazip.com"
alias myip="dig +short myip.opendns.com @resolver1.opendns.com"

# Show laptop's IP addresses
alias ips="ifconfig -a | perl -nle'/(\d+\.\d+\.\d+\.\d+)/ && print $1'"

alias reattach="screen -r"

# SSH stuff
# Pass our credentials by default
alias ssh="ssh -A"
alias sshA="ssh -A"
alias ssh_unkeyed="/usr/bin/ssh"

alias scp_no_hostchecks="scp -o UserKnownHostsFile=/dev/null -o GlobalKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
alias ssh_no_hostchecks="ssh -A -o UserKnownHostsFile=/dev/null -o GlobalKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"

# Strip color codes from commands that insist on spewing them so we can
# pipe them into files cleanly
alias stripcolors='sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g"'

# On the rare occasions I don't want to continue a download I can always
# delete the incomplete fragment explicitly. I usually just want to
# complete it.
alias wget="wget -c"

# Dump the last 20 history entries
alias zh="fc -l -d -D"

# My typical tyops.
alias gerp="grep"
alias grep-i="grep -i"
alias grep='GREP_COLOR="1;37;41" LANG=C grep --color=auto'
alias grepi="grep -i"
alias knfie="knife"
alias maek="make"
alias psax="ps ax"
alias pswax="ps wax"
alias psxa="ps ax"
alias raek="rake"
alias tartvf="tar tvf"
alias tartvzf="tar tvzf"
alias tarxvf="tar xvf"

# Deal with various stupidities

# Thanks so much for breaking ldapsearch, fink
if [ -x /sw/bin/ldapsearch ];then
  alias ldapsearch=/usr/bin/ldapsearch
fi

if [ -x /usr/bin/vagrant ]; then
  alias vagrant="/usr/bin/vagrant"
fi

# Use brew versions if present
if [ -x /usr/local/bin/mysql/bin/mysql ]; then
  alias mysql="/usr/local/mysql/bin/mysql"
fi

if [ -x /usr/local/bin/mysql/bin/mysqladmin ]; then
  alias mysqladmin="/usr/local/mysql/bin/mysqladmin"
fi

alias ..="cd .."
alias ...="cd ../.."

# Honor old .zsh_aliases.local customizations, but print depecation warning.
if [ -f ~/.zsh_aliases.local ]; then
  source ~/.zsh_aliases.local
  echo ".zsh_aliases.local is deprecated. Make entries in ~/.zshrc.d instead."
fi
